<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Formera WiFi Switch</title>
    <link href="main.css" rel="stylesheet">

  </head>
  <body>

    <!-- Fixed navbar -->
    <div class="navbar navbar-default navbar-fixed-top" role="navigation">
      <img style="position:absolute; left:10px; top:5px" src="formera_logo50x50.png">
      <div class="container">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="index.htm">Wifi Switch</a>
        </div>
        <div class="navbar-collapse collapse navbar-right">
          <ul class="nav navbar-nav">
            <li><a href="index.htm">SWITCH</a></li>
            <li><a href="network.htm">NETWORK</a></li>
            <li><a href="mqtt.htm">MQTT</a></li>
            <li><a href="settings.htm">SETTINGS</a></li>
          </ul>
        </div><!--/.nav-collapse -->
      </div>
    </div>

    <!-- *****************************************************************************************************************
  	 HEADERWRAP
  	 ***************************************************************************************************************** -->
    <div id="headerwrap">
  	    <div class="container">
  			<div class="row">
  				<div class="col-lg-8 col-lg-offset-2">
  					<h3 id="intro_header"></h3>
  					<h1 id="portal_header"></h1>
            <h5>Here you can set the simplest control commands but also network, MQTT and advance settings.</h5>
  					<h5>Use the above menu.</h5>
  				</div>
  			</div><!-- /row -->
  	    </div> <!-- /container -->
  	</div><!-- /headerwrap -->

	<!-- *****************************************************************************************************************
	 TITLE & CONTENT
	 ***************************************************************************************************************** -->

	 <div class="container mt">
	 	<div class="row">
		 	<div class="col-lg-10 col-lg-offset-1 centered">
		 	</div>

		 	<div class="col-lg-5 col-lg-offset-1">
			     <div class="spacing"></div>
           <h4>Control Switches</h4>

          <div id="onoffswitch" class="onoffswitch">
             <input type="checkbox" name="onoffswitch1" class="onoffswitch-checkbox" id="switch1">
             <label class="onoffswitch-label" for="switch1">
                <span class="onoffswitch-inner"></span>
                <span class="onoffswitch-switch"></span>
             </label>
          </div>

          <div id="onoffswitch2" class="onoffswitch">
             <input type="checkbox" name="onoffswitch2" class="onoffswitch-checkbox" id="switch2">
             <label class="onoffswitch-label" for="switch2">
                <span class="onoffswitch-inner"></span>
                <span class="onoffswitch-switch"></span>
             </label>
          </div>

          </br><h4>Set Device Name</h4>
          <div class="input_data">
            <label for="devicename">Name: </label>
            <input type="text" name="devicename" id="devicename">
            <input type="submit" value="Update" style="position:relative; left:-8em; width: 80px" class="btn btn-theme" onclick="setDeviceName()"/>
          </div>

          </br><h4>Device Time</h4>
          <div id="status_devicetime"></div>
            <input id="submit" name="submit" type="submit" value="Sync Time" class="btn btn-theme" onclick="updateDeviceTime()">
		 	</div> <! --/col-lg-5 col-lg-offset-1 -->

		 	<div class="col-lg-4 col-lg-offset-1">
			 	<div class="spacing"></div>
		 		<h4>Switch status</h4>
		 		<div class="hline"></div>
        <div id="status_device_type"></div>
        <div id="status_uptime"></div>
        <div id="status_fw_version"></div>
        <div id="status_switch_type"></div>
        <div id="status_switch_count"></div>
        <div id="status_name"></div>
        <div id="status_hostname"></div>

        <br>
         <table id="switches" border="1">
               <tr>
                     <th>Device ID: </th>
                     <th>Switch type: </th>
                     <th>State</th>
               </tr>
         </table>
		 	</div> <! --/col-lg-4 col-lg-offset-1 -->

	 	</div><! --/row -->
	 </div><! --/container -->

	<!-- *****************************************************************************************************************
	 FOOTER
	 ***************************************************************************************************************** -->
	 <div id="footerwrap">
	 	<div class="container">
		 	<div class="row">
		 		<div class="col-lg-4">
		 			<h4>About</h4>
		 			<div class="hline-w"></div>
            <p>We develop products with open rest API and MQTT support so our products can be used in any SmartHome application or system of choice. Our vison is to make any intelligent SmartHome secure and affordable with high quality products.</p>
		 		</div>
		 		<div class="col-lg-4">
		 			<h4>Contact information</h4>
		 			<div class="hline-w"></div>
		 			<p>
            <p><b>Website:</b> <a href="http://formera.net">  http://formera.net</a></p>
            <p><b>Webshop:</b> <a href="http://shop.formera.net">http://shop.formera.net</a></p>
            <p><b>email:</b> sales@formera.net</p>
		 			</p>
		 		</div>
		 		<div class="col-lg-4">
		 			<h4>Our Bunker</h4>
		 			<div class="hline-w"></div>
		 			<p>
            Fässbergsgatan 61F<br/>
            431 69 Mölndal<br/>
            Sweden
		 			</p>
		 		</div>

		 	</div><! --/row -->
	 	</div><! --/container -->
	 </div><! --/footerwrap -->

    <script src="jquery.min.js"></script>
    <script src="main.js"></script>

    <script>

var prefix = "";
//var prefix = "http://10.0.0.29";    //for dev
var defaultDeviceName="";
var deviceUpTime=0;
var deviceBaseTime= "";
var deviceTime = new Date(0);
var isLoaded = false;
var switchCount =0;
var switchState1 = 0;
var switchState2 = 0;

function updateButton(newState) {
   $("#switch").prop('checked', newState);
}

function secondsToString(seconds){
  var numdays = Math.floor(seconds / 86400);
  var numhours = Math.floor((seconds % 86400) / 3600);
  var numminutes = Math.floor(((seconds % 86400) % 3600) / 60);
  var numseconds = ((seconds % 86400) % 3600) % 60;
  return numdays + " days " + numhours + " hours " + numminutes + " minutes " + numseconds + " seconds";
}

$.getJSON(prefix + '/api/switches', function (json) {
    var tr;
    for (var i = 0; i < json.length; i++) {
        tr = $('<tr/>');

  tr.append("<td>" + json[i].id + "</td>");
        tr.append("<td>" + json[i].switch_type + "</td>");
        tr.append("<td>" + json[i].state + "</td>");
        $("#switches").append(tr);
    }

    switchCount = json.length;
    switchState1 = json[0].state;
    if (json.length>1 ) {
      switchState2 = json[1].state;
    }

    document.getElementById("status_switch_type").innerHTML = '<p><b>SwitchType: </b>' + json[0].switch_type + '</p>';
    document.getElementById("status_switch_count").innerHTML = '<p><b>SwitchCount: </b>' + json.length + '</p>';

/* Not working, event is not triggered
    if(json.length==2) {
      createSliders(false);
    } else {
      createSliders(true);
    }
*/

});

$.getJSON(prefix + '/api/settings', function(json) {
  deviceBaseTime=json.base_devicetime;
});

$.getJSON(prefix + '/api/device', function(json) {
  if (json.apMode = false) {
        $("#intro_header").text("You are connected through the soft AP:  " + json.ssid);

  } else {
        $("#intro_header").text("You are connected through the wifi network: " + json.ssid);
  }

  $("#portal_header").text("Configuration portal of device: " + json.hostname);

  document.getElementById("status_device_type").innerHTML = '<p><b>DeviceType: </b>' + json.type + '</p>';
  document.getElementById("status_uptime").innerHTML = '<p><b>Total uptime: </b>' + secondsToString(json.uptime) + '</p>';
  document.getElementById("status_fw_version").innerHTML = '<p><b>Firmware version: </b>' + json.fw_version + '</p>';
  document.getElementById("status_name").innerHTML = '<p><b>DeviceName: </b>' + json.name + '</p>';
  document.getElementById("status_hostname").innerHTML = '<p><b>HostName: </b>' + json.hostname + '</p>';

  defaultDeviceName =  json.name;
  deviceUpTime = json.uptime;
  LoadDefaults();
});

function setDeviceName(){
  var newDeviceName = document.getElementById('devicename').value;
  xhr = new XMLHttpRequest();
  var url = prefix + '/api/settings';
  xhr.open("PUT", url, true);
  xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
  xhr.onreadystatechange = function () {
      if (xhr.readyState == 4 && xhr.status == 200) {
          var resp = JSON.parse(xhr.responseText);
          console.log(resp);
      }
  location.reload();
  }
  var data = JSON.stringify({'name':newDeviceName});
  xhr.send(data);
}

function getDeviceTime(){
  date = new Date(deviceTime);
  setTimeout('getDeviceTime();',1000);
  deviceTime.setSeconds(deviceTime.getSeconds() + 1);
  document.getElementById("status_devicetime").innerHTML = '<p><b>' + date.toLocaleString() + '</b></p>';
}

function setDeviceTime(newBaseTime){
  xhr = new XMLHttpRequest();
  var url = prefix + '/api/settings';
  xhr.open("PUT", url, true);
  xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
  xhr.onreadystatechange = function () {
      if (xhr.readyState == 4 && xhr.status == 200) {
          var resp = JSON.parse(xhr.responseText);
          console.log(resp);
      }
  location.reload();
  }
  var data = JSON.stringify({'base_devicetime':newBaseTime});
  xhr.send(data);
}

function updateDeviceTime(){
  var timeInMs = Date.now();
  var newBaseTime = timeInMs - (deviceUpTime*1000);
  setDeviceTime(newBaseTime);
}

function setSwitchState(switchID, switchState){
  xhr = new XMLHttpRequest();
  var url = prefix + '/api/switches/' + switchID;
  xhr.open("PUT", url, true);
  xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
  xhr.onreadystatechange = function () {
      if (xhr.readyState == 4 && xhr.status == 200) {
          var resp = JSON.parse(xhr.responseText);
          console.log(resp);
      }
  //location.reload();
  }
  var data = JSON.stringify({'state':switchState});
  xhr.send(data);
}

function handleSwitches(){

  document.getElementById("switch1").checked = switchState1;
  if(switchCount == 1) {
    var element = document.getElementById("onoffswitch2");
    element.parentNode.removeChild(element);


  } else {
      document.getElementById("switch2").checked = switchState2;
  }
}

function LoadDefaults(){
  handleSwitches();
  document.getElementById("devicename").value =   defaultDeviceName;
  if (isLoaded == false) {
    deviceTime = new Date(Number(deviceBaseTime) + (deviceUpTime*1000));
    isLoaded = true;
  }
  getDeviceTime();
}

$(document).ready(function() {
   $("#switch1").click(function(event){
      var newState = $("#switch1").prop('checked');
      console.log("switch1", newState);
      if(newState) {
         setSwitchState(0,1)
      } else {
         setSwitchState(0,0);
      }
   });
   $("#switch2").click(function(event){
      var newState = $("#switch2").prop('checked');
      console.log("switch2", newState);
      if(newState) {
         setSwitchState(1,1);
      } else {
          setSwitchState(1,0);
      }
   });
});

var uri = window.location.toString();
if (uri.indexOf("?") > 0) {
    var clean_uri = uri.substring(0, uri.indexOf("?"));
    window.history.replaceState({}, document.title, clean_uri);
}

</script>
  </body>
</html>
